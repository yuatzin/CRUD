@page "/film/edit/{id:int}"
@using CRUD.Shared.Models
@inject HttpClient Http
@inject NavigationManager Navigation

<h3>Editar socio</h3>

@if (_film == null)
{
    <p><em>Cargando...</em></p>
}
else
{
    <EditForm Model="@_film" OnValidSubmit="Put">
        <div class="form-group">
            <label>Nombre Completo:</label>
            <InputText @bind-Value="_film.NombreCompleto" class="form-control" />
        </div>
        <div class="form-group">
            <label>Usuario:</label>
            <InputText @bind-Value="_film.usuario" class="form-control" />
        </div>
        <div class="form-group">
            <label>Clave:</label>
            <InputText @bind-Value="_film.clave" class="form-control" type="password" />
        </div>
        <div class="form-group">
            <label>Celular:</label>
            <InputText @bind-Value="_film.celular" class="form-control" />
        </div>
        <div class="form-group">
            <label>Email:</label>
            <InputText @bind-Value="_film.Email" class="form-control" type="email" />
        </div>
        <div class="form-group">
            <input type="submit" class="btn btn-success" value="Editar socio" />
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public int Id { get; set; }

    private Film _film = null;

    protected override async Task OnInitializedAsync()
    {
        _film = await Http.GetFromJsonAsync<Film>($"/api/Films/{Id}");
    }

    private async Task Put()
    {
        await Http.PutAsJsonAsync<Film>($"/api/Films/{_film.Id}", _film);
        Navigation.NavigateTo("/films");
    }
}
